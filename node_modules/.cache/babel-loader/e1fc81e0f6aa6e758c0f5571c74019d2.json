{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rbasu\\\\Desktop\\\\Trabajos\\\\Iotek\\\\Iotek Web\\\\iOTEK\\\\iotek\\\\src\\\\Components\\\\global\\\\carousel\\\\TextCarousel.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Carousel, CarouselItem, CarouselControl, CarouselIndicators, CarouselCaption } from 'reactstrap';\nimport * as Styled from './TextCarousel.style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TextCarousel() {\n  _s();\n\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [animating, setAnimating] = useState(false);\n\n  const next = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\n    setActiveIndex(nextIndex);\n  };\n\n  const previous = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\n    setActiveIndex(nextIndex);\n  };\n\n  const goToIndex = newIndex => {\n    if (animating) return;\n    setActiveIndex(newIndex);\n  };\n\n  const slides = items.map(item => {\n    return /*#__PURE__*/_jsxDEV(CarouselItem, {\n      onExiting: () => setAnimating(true),\n      onExited: () => setAnimating(false),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: item.src,\n        alt: item.altText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CarouselCaption, {\n        captionText: item.caption,\n        captionHeader: item.caption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, item.src, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Styled.Container, {\n    children: /*#__PURE__*/_jsxDEV(Carousel, {\n      activeIndex: activeIndex,\n      next: next,\n      previous: previous,\n      children: [/*#__PURE__*/_jsxDEV(CarouselIndicators, {\n        items: items,\n        activeIndex: activeIndex,\n        onClickHandler: goToIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), slides, /*#__PURE__*/_jsxDEV(CarouselControl, {\n        direction: \"prev\",\n        directionText: \"Previous\",\n        onClickHandler: previous\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CarouselControl, {\n        direction: \"next\",\n        directionText: \"Next\",\n        onClickHandler: next\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TextCarousel, \"FYd3Lqf74+dQScd+D3/2SfzV0cE=\");\n\n_c = TextCarousel;\nexport default TextCarousel; // $('#arrow-down-slider').on('click', function() {\n//   $('html').animate({\n//     scrollTop: $('#wallpaper').offset().top\n//   }, 1000);\n// }); \n\nvar _c;\n\n$RefreshReg$(_c, \"TextCarousel\");","map":{"version":3,"sources":["C:/Users/rbasu/Desktop/Trabajos/Iotek/Iotek Web/iOTEK/iotek/src/Components/global/carousel/TextCarousel.tsx"],"names":["React","Carousel","CarouselItem","CarouselControl","CarouselIndicators","CarouselCaption","Styled","TextCarousel","activeIndex","setActiveIndex","useState","animating","setAnimating","next","nextIndex","items","length","previous","goToIndex","newIndex","slides","map","item","src","altText","caption"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,QADF,EAEEC,YAFF,EAGEC,eAHF,EAIEC,kBAJF,EAKEC,eALF,QAMO,YANP;AAOA,OAAO,KAAKC,MAAZ,MAAwB,sBAAxB;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACtB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCC,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BF,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMG,IAAI,GAAG,MAAM;AACjB,QAAIF,SAAJ,EAAe;AACf,UAAMG,SAAS,GAAGN,WAAW,KAAKO,KAAK,CAACC,MAAN,GAAe,CAA/B,GAAmC,CAAnC,GAAuCR,WAAW,GAAG,CAAvE;AACAC,IAAAA,cAAc,CAACK,SAAD,CAAd;AACD,GAJD;;AAMA,QAAMG,QAAQ,GAAG,MAAM;AACrB,QAAIN,SAAJ,EAAe;AACf,UAAMG,SAAS,GAAGN,WAAW,KAAK,CAAhB,GAAoBO,KAAK,CAACC,MAAN,GAAe,CAAnC,GAAuCR,WAAW,GAAG,CAAvE;AACAC,IAAAA,cAAc,CAACK,SAAD,CAAd;AACD,GAJD;;AAMA,QAAMI,SAAS,GAAIC,QAAD,IAAc;AAC9B,QAAIR,SAAJ,EAAe;AACfF,IAAAA,cAAc,CAACU,QAAD,CAAd;AACD,GAHD;;AAKA,QAAMC,MAAM,GAAGL,KAAK,CAACM,GAAN,CAAWC,IAAD,IAAU;AACjC,wBACE,QAAC,YAAD;AACE,MAAA,SAAS,EAAE,MAAMV,YAAY,CAAC,IAAD,CAD/B;AAEE,MAAA,QAAQ,EAAE,MAAMA,YAAY,CAAC,KAAD,CAF9B;AAAA,8BAKE;AAAK,QAAA,GAAG,EAAEU,IAAI,CAACC,GAAf;AAAoB,QAAA,GAAG,EAAED,IAAI,CAACE;AAA9B;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,eAAD;AAAiB,QAAA,WAAW,EAAEF,IAAI,CAACG,OAAnC;AAA4C,QAAA,aAAa,EAAEH,IAAI,CAACG;AAAhE;AAAA;AAAA;AAAA;AAAA,cANF;AAAA,OAGOH,IAAI,CAACC,GAHZ;AAAA;AAAA;AAAA;AAAA,YADF;AAUD,GAXc,CAAf;AAaA,sBACE,QAAC,MAAD,CAAQ,SAAR;AAAA,2BACE,QAAC,QAAD;AACA,MAAA,WAAW,EAAEf,WADb;AAEA,MAAA,IAAI,EAAEK,IAFN;AAGA,MAAA,QAAQ,EAAEI,QAHV;AAAA,8BAKA,QAAC,kBAAD;AAAoB,QAAA,KAAK,EAAEF,KAA3B;AAAkC,QAAA,WAAW,EAAEP,WAA/C;AAA4D,QAAA,cAAc,EAAEU;AAA5E;AAAA;AAAA;AAAA;AAAA,cALA,EAMCE,MAND,eAOA,QAAC,eAAD;AAAiB,QAAA,SAAS,EAAC,MAA3B;AAAkC,QAAA,aAAa,EAAC,UAAhD;AAA2D,QAAA,cAAc,EAAEH;AAA3E;AAAA;AAAA;AAAA;AAAA,cAPA,eAQA,QAAC,eAAD;AAAiB,QAAA,SAAS,EAAC,MAA3B;AAAkC,QAAA,aAAa,EAAC,MAAhD;AAAuD,QAAA,cAAc,EAAEJ;AAAvE;AAAA;AAAA;AAAA;AAAA,cARA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAhDQN,Y;;KAAAA,Y;AAkDT,eAAeA,YAAf,C,CAEA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\r\nimport {\r\n  Carousel,\r\n  CarouselItem,\r\n  CarouselControl,\r\n  CarouselIndicators,\r\n  CarouselCaption\r\n} from 'reactstrap';\r\nimport * as Styled from './TextCarousel.style'\r\n\r\nfunction TextCarousel() {\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [animating, setAnimating] = useState(false);\r\n\r\n  const next = () => {\r\n    if (animating) return;\r\n    const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\r\n    setActiveIndex(nextIndex);\r\n  }\r\n\r\n  const previous = () => {\r\n    if (animating) return;\r\n    const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\r\n    setActiveIndex(nextIndex);\r\n  }\r\n\r\n  const goToIndex = (newIndex) => {\r\n    if (animating) return;\r\n    setActiveIndex(newIndex);\r\n  }\r\n\r\n  const slides = items.map((item) => {\r\n    return (\r\n      <CarouselItem\r\n        onExiting={() => setAnimating(true)}\r\n        onExited={() => setAnimating(false)}\r\n        key={item.src}\r\n      >\r\n        <img src={item.src} alt={item.altText} />\r\n        <CarouselCaption captionText={item.caption} captionHeader={item.caption} />\r\n      </CarouselItem>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Styled.Container>\r\n      <Carousel\r\n      activeIndex={activeIndex}\r\n      next={next}\r\n      previous={previous}\r\n    >\r\n      <CarouselIndicators items={items} activeIndex={activeIndex} onClickHandler={goToIndex} />\r\n      {slides}\r\n      <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={previous} />\r\n      <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={next} />\r\n    </Carousel>\r\n    </Styled.Container>  \r\n  )\r\n}\r\n\r\nexport default TextCarousel\r\n\r\n// $('#arrow-down-slider').on('click', function() {\r\n//   $('html').animate({\r\n//     scrollTop: $('#wallpaper').offset().top\r\n//   }, 1000);\r\n// }); "]},"metadata":{},"sourceType":"module"}